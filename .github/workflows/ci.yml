name: Continuous Integration
on: [pull_request]
jobs:
  docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        install-type: [dev]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: pip-${{ matrix.python-version }}-${{ matrix.install-type }}-${{ hashFiles('**/poetry.lock')
          }}
        restore-keys: pip-${{ matrix.python-version }}-${{ matrix.install-type }}
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install the python project
      env:
        INSTALL_TYPE: ${{ matrix.install-type }}
      run: .ci/install_script.sh
    - name: Build documentation
      run: poetry run make SPHINXOPTS='-nW' -C doc html
    - uses: actions/upload-artifact@v2
      with:
        name: doc-build
        path: doc/build/html
  pre-commit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        install-type: [dev]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: pip-${{ matrix.python-version }}-${{ matrix.install-type }}-${{ hashFiles('**/poetry.lock')
          }}
        restore-keys: pip-${{ matrix.python-version }}-${{ matrix.install-type }}
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install the python project
      env:
        INSTALL_TYPE: ${{ matrix.install-type }}
      run: .ci/install_script.sh
    - name: Run pre-commit
      run: poetry run pre-commit run --all-files || ( git status --short ; git diff
        ; exit 1 )
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
        install-type: [dev]
        include:
        - python-version: 3.8
          install-type: dev_sdist
        - python-version: 3.8
          install-type: dev_bdist_wheel
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: pip-${{ matrix.python-version }}-${{ matrix.install-type }}-${{ hashFiles('**/poetry.lock')
          }}
        restore-keys: pip-${{ matrix.python-version }}-${{ matrix.install-type }}
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install the python project
      env:
        INSTALL_TYPE: ${{ matrix.install-type }}
      run: .ci/install_script.sh
      # When loading pythtb for the first time within a pytest run, its
      # invalid esacpe sequences (which should be a DeprecationWarning) turn
      # into a SyntaxError. Importing it first (and therefore compiling the code
      # to .pyc) alleviates this.
    - name: Run pytest
      run: poetry run python -c 'import pythtb' && poetry run pytest --cov=tbmodels
        --cov-config=.coveragerc
      if: matrix.install-type == 'dev'
    - name: Run pytest
      run: python -c 'import pythtb' && pytest --cov=tbmodels --cov-config=.coveragerc
      if: matrix.install-type != 'dev'
    - name: Run codecov
      run: codecov
